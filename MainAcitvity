package com.maximilianokolbe.popularmoviesstage1;

import android.app.Activity;
import android.app.DownloadManager;
import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;

import com.maximilianokolbe.diegopopularmovies.ActivityDetail;
import com.maximilianokolbe.diegopopularmovies.Movie;
import com.maximilianokolbe.diegopopularmovies.MovieAdapter;
import com.maximilianokolbe.diegopopularmovies.NetworkUtils;
import com.maximilianokolbe.diegopopularmovies.OpenMovieJsonUtils;

import java.io.EOFException;
import java.net.URL;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;

public class MainActivity extends AppCompatActivity {
    /**
     * 1 get API key
     * 2. get a list of movies from endpoints
     * 3. Parse movie data into a list of movie objects
     * 4. Create activities and layouts for movie list and movie detail screens
     * 5. Populate movie list and movie detail screen
     * 6. Do click handling in recycler view to open detail
     * 7. pass movie details from list activity to detail activity
     *
     * @param savedInstanceState
     */
    private ProgressBar mLoadingIndicator;
    private TextView mErrorMessageDisplay;
    private RecyclerView mRecyclerView;
    private MovieAdapter mForecastAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);}


      //  String[] movies = getResources().getStringArray(R.array.movie_names);this is not for me this a local

    private MovieAdapter movieAdapter = new ArrayAdapter<Movie>(this,   android.R.layout.simple_list_item_1, );

        // Simplification: Using a ListView instead of a RecyclerView
    //    ListView listView = findViewById(R.id.movies_listview);
    //    listView.setAdapter(adapter);
    //    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
      //      @Override
        //    public void onItemClick(AdapterView<?> adapterView, View view, int position, long l) {
        //        launchDetailActivity(position);
           // }
    //    });
 //   }

    private void launchDetailActivity(int position) {
        Intent intent = new Intent(this, ActivityDetail.class);
       // intent.putExtra(ActivityDetail.EXTRA_POSITION, position);
        startActivity(intent);
    }


    /**
     * API key   "http://api.themoviedb.org/3/movie/popular?api_key=72152674a8995ac4eb3f953125d6cdd5"
     *
     *
     * @param view
     */

    public void goToNextActivity(View view) {

        Intent intent = new Intent(this, ActivityDetail.class);
        startActivity(intent);

    }
    private void showWeatherDataView() {
        /* First, make sure the error is invisible */
        mErrorMessageDisplay.setVisibility(View.INVISIBLE);
        /* Then, make sure the weather data is visible */
        mRecyclerView.setVisibility(View.VISIBLE);
    }

    @Override
    protected String[] doInBackGround(String... params){
        if (params.length == 0) {
            return null;
        }
        String movies = params[0];
        URL   url  = NetworkUtils.buildUrl();
        try {

            String moviejsonsResponse = NetworkUtils
                    .getResponseFromHttpUrl(url);

            String[] simpleJsonsMovie = OpenMovieJsonUtils
                    .getSimpleMovieStringsFromJson(MainActivity.this, moviejsonsResponse);
            return simpleJsonsMovie;

            //here I have to parse the JSON
            // open Whetaher JSON
    }catch (Exception e){
            e.printStackTrace();
            return null;

        }

}

    @Override
    protected void onPostExecute(String[] movieData) {
        mLoadingIndicator.setVisibility(View.INVISIBLE);
        if (movieData != null) {
            showWeatherDataView();
            mForecastAdapter.setWeatherData(movieData);          //setWeatherData(movieData);
        } else {

            //showErrorMessage();
        }
    }





}
